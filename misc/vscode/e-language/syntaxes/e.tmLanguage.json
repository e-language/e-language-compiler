{
  "scopeName": "source.e",
  "name": "Elang",
  "patterns": [
    {
      "name": "string",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape",
          "match": "\\\\."
        }
      ]
    },
    {
      "name": "constant.character",
      "match": "'(.|\\\\.)'"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "name": "comment.line",
      "match": "%.*$"
    },
    {
      "name": "keyword.control",
      "match": "\\b(fn|struct|end|if|then|else|elif|while|do|goto|return)\\b"
    },
    {
      "name": "keyword.other",
      "match": "\\b(attribute|as)\\b"
    },
    {
      "name": "keyword.operator.sizeof",
      "match": "\\bsizeof\\b"
    },
    {
      "name": "keyword.operator.alignof",
      "match": "\\balignof\\b"
    },
    {
      "name": "storage.type",
      "match": "\\b(byte|word|float|any)\\b"
    },
    {
      "name": "storage.modifier",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*[@^]\\B"
    }
  ],
  "repository": {
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float",
          "match": "\\b\\d+.\\d+([Ee][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.numeric.hex",
          "match": "\\b0x[0-9a-fA-F_]+\\b"
        },
        {
          "name": "constant.numeric.octal",
          "match": "\\b0[0-7_]+\\b"
        },
        {
          "name": "constant.numeric.binary",
          "match": "\\b0b[01_]+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "\\b(band|bor|bxor|bnot|and|or|not|rem|bsl|bsr|==|!=|<|>|<=|>=|\\+|-|\\*|/)\\b"
        }
      ]
    }
  }
}
